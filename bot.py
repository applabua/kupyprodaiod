import os
import logging
import asyncio
import nest_asyncio

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

# --------------------------------------------------------------------
#            1. –ë–ê–ó–û–í–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –¢–ê –ì–õ–û–ë–ê–õ–¨–ù–Ü –ó–ú–Ü–ù–ù–Ü
# --------------------------------------------------------------------
# –î–æ–∑–≤–æ–ª—è—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ event-loop (Heroku/Jupyter)
nest_asyncio.apply()

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°—Ç–∞–Ω —Ä–æ–∑–º–æ–≤–∏
COLLECT, CONFIRM1, CONFIRM2 = range(3)

# –î–∞–Ω—ñ –±–æ—Ç–∞ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
BOT_TOKEN = os.environ.get("BOT_TOKEN", "7574826063:AAF4bq0_bvC1jSl0ynrWyaH_fGtyLi7j5Cw")
ADMIN_ID = 2045410830  # –∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä

# –õ—ñ—á–∏–ª—å–Ω–∏–∫ (—É–º–æ–≤–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
announcement_count = 0

# --------------------------------------------------------------------
#                    2. –•–ï–ù–î–õ–ï–†–ò –°–¢–ê–†–¢–£ –¢–ê –ì–û–õ–û–í–ù–û–á –ö–ù–û–ü–ö–ò
# --------------------------------------------------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ö–æ–º–∞–Ω–¥–∞ /start: –Ω–∞–¥—Å–∏–ª–∞—î —Ñ–æ—Ç–æ, –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ –∫–Ω–æ–ø–∫—É ¬´–†–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è¬ª.
    """
    image_url = "https://i.ibb.co/Y7k6mN9G/image.png"
    welcome_text = (
        "–ü—Ä–∏–≤—ñ—Ç! üòä –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –±–æ—Ç–∞ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω—å!\n\n"
        "–ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü—å–æ–≥–æ –±–æ—Ç–∞ –≤–∏ –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤–∞—à–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è.\n"
        "–í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è 200 –≥—Ä–Ω.\n\n"
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø–æ—á–∞—Ç–∏."
    )
    keyboard = [[InlineKeyboardButton("–†–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è üì¢", callback_data="post_ad")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_photo(
        photo=image_url,
        caption=welcome_text,
        reply_markup=reply_markup
    )
    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ ConversationHandler.END, –±–æ –ø–æ–∫–∏ —Ä–æ–∑–º–æ–≤–∞ –Ω–µ –ø–æ—á–∞–ª–∞—Å—å
    return ConversationHandler.END

async def post_ad_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ü–æ—á–∏–Ω–∞—î–º–æ –ø—Ä–æ—Ü–µ—Å –∑–±–æ—Ä—É –¥–∞–Ω–∏—Ö –ø—Ä–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è.
    –ü–æ—è—Å–Ω—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ, —â–æ –º–æ–∂–Ω–∞ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Ñ–æ—Ç–æ –π —Ç–µ–∫—Å—Ç —É —Ä—ñ–∑–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö.
    """
    query = update.callback_query
    await query.answer()

    instructions = (
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —É—Å–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –¥–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è (–≤ –¥–æ–≤—ñ–ª—å–Ω—ñ–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ):\n"
        "‚Ä¢ –§–æ—Ç–æ (–∑–∞ –±–∞–∂–∞–Ω–Ω—è–º)\n"
        "‚Ä¢ –û–ø–∏—Å –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è\n"
        "‚Ä¢ –¶—ñ–Ω—É\n"
        "‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É\n"
        "‚Ä¢ –Ü–º'—è\n\n"
        "–Ø–∫—â–æ —Å–ø–æ—á–∞—Ç–∫—É –Ω–∞–¥—Å–∏–ª–∞—î—Ç–µ —Ñ–æ—Ç–æ –±–µ–∑ –ø—ñ–¥–ø–∏—Å—É ‚Äî —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –¥–æ–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç.\n"
        "–ú–æ–∂–µ—Ç–µ —Ç–∞–∫–æ–∂ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—Å–µ –æ–¥—Ä–∞–∑—É —è–∫ —Ñ–æ—Ç–æ –∑ –ø—ñ–¥–ø–∏—Å–æ–º.\n"
        "–ù–∞–¥—ñ—à–ª—ñ—Ç—å /done, –∫–æ–ª–∏ –∑–∞–∫—ñ–Ω—á–∏—Ç–µ –∞–±–æ —è–∫—â–æ –≤—Å–µ –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏."
    )
    await query.message.reply_text(instructions)

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ user_data
    context.user_data["photo"] = None
    context.user_data["ad_text"] = ""
    return COLLECT

# --------------------------------------------------------------------
#             3. –ì–û–õ–û–í–ù–ò–ô –•–ï–ù–î–õ–ï–† –ó–ë–û–†–£ –î–ê–ù–ò–• (COLLECT)
# --------------------------------------------------------------------
async def collect_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ó–±–∏—Ä–∞—î —Ñ–æ—Ç–æ —Ç–∞ —Ç–µ–∫—Å—Ç —ñ–∑ –∫—ñ–ª—å–∫–æ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –¥–æ–≤—ñ–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É.
    –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–¥—Å–∏–ª–∞—î —Ñ–æ—Ç–æ —ñ/–∞–±–æ —Ç–µ–∫—Å—Ç. –Ø–∫—â–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è —Ñ–æ—Ç–æ –±–µ–∑ –ø—ñ–¥–ø–∏—Å—É, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ file_id.
    –Ø–∫—â–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è —Ç–µ–∫—Å—Ç, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ ad_text.
    –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–±—Ä–∞–≤ /done, –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –ø–µ—Ä—à–æ–≥–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.
    """
    if update.message.photo:
        # –Ø–∫—â–æ –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ —î —Ñ–æ—Ç–æ
        photo_file = update.message.photo[-1]
        context.user_data["photo"] = photo_file.file_id
        caption = update.message.caption
        if caption:
            # –î–æ–¥–∞—î–º–æ caption –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
            existing_text = context.user_data["ad_text"]
            context.user_data["ad_text"] = existing_text + "\n" + caption
        await update.message.reply_text("–§–æ—Ç–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –¥–æ–¥–∞—Ç–∏ —â–µ –¥–∞–Ω—ñ, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç –∞–±–æ —ñ–Ω—à–µ —Ñ–æ—Ç–æ.")
        return COLLECT

    elif update.message.text:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ /done
        if update.message.text.strip().lower() == "/done":
            # –Ø–∫—â–æ —Ç–µ–∫—Å—Ç –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —É–∑–∞–≥–∞–ª—ñ, –ø—Ä–æ—Å–∏–º–æ –¥–æ–¥–∞—Ç–∏
            if not context.user_data["ad_text"].strip() and not context.user_data["photo"]:
                await update.message.reply_text(
                    "–í–∏ —â–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –¥–æ–¥–∞–ª–∏ (–∞–Ω—ñ —Ñ–æ—Ç–æ, –∞–Ω—ñ —Ç–µ–∫—Å—Ç). –ë—É–¥—å –ª–∞—Å–∫–∞, –¥–æ–¥–∞–π—Ç–µ —Ö–æ—á —è–∫—É—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é."
                )
                return COLLECT
            # –Ü–Ω–∞–∫—à–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É
            return await show_confirmation_1(update, context)

        # –Ø–∫—â–æ –∑–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç
        existing_text = context.user_data["ad_text"]
        # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Ä—è–¥–∫–∞
        context.user_data["ad_text"] = (existing_text + "\n" + update.message.text).strip()
        await update.message.reply_text("–¢–µ–∫—Å—Ç –¥–æ–¥–∞–Ω–æ. –Ø–∫—â–æ –≤—Å–µ, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å /done, —ñ–Ω–∞–∫—à–µ –º–æ–∂–Ω–∞ —â–µ –¥–æ–¥–∞—Ç–∏ –¥–∞–Ω—ñ.")
        return COLLECT

    # –Ø–∫—â–æ –ø—Ä–∏–π—à–ª–æ —è–∫–µ—Å—å —ñ–Ω—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–¥–æ–∫—É–º–µ–Ω—Ç, —Å—Ç—ñ–∫–µ—Ä —Ç–æ—â–æ)
    await update.message.reply_text("–ù–∞—Ä–∞–∑—ñ –±–æ—Ç –ø—Ä–∏–π–º–∞—î –ª–∏—à–µ —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç –∞–±–æ –∫–æ–º–∞–Ω–¥—É /done.")
    return COLLECT

# --------------------------------------------------------------------
#                 4. –ü–ï–†–®–ï –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø (CONFIRM1)
# --------------------------------------------------------------------
async def show_confirmation_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ü–æ–∫–∞–∑—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø–µ—Ä—à–∏–π –µ–∫—Ä–∞–Ω –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è:
    - –§–æ—Ç–æ (—è–∫—â–æ —î)
    - –ó—ñ–±—Ä–∞–Ω–∏–π —Ç–µ–∫—Å—Ç
    –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∞–±–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏.
    """
    preview_text = (
        "–û—Å—å —â–æ –≤–∏ –Ω–∞–¥–∞–ª–∏:\n\n"
        f"{context.user_data['ad_text']}\n\n"
        "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ —á–∏ —Å–∫–∞—Å—É–≤–∞—Ç–∏?"
    )

    keyboard = [
        [InlineKeyboardButton("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", callback_data="confirm1")],
        [InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="cancel")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Å–∫—ñ–ª—å–∫–∏ —Ç—É—Ç –≤–ø–µ—Ä—à–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–µ–≤‚Äô—é, —Ä–æ–±–∏–º–æ —Ü–µ —É –≤–∏–≥–ª—è–¥—ñ –Ω–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if context.user_data["photo"]:
        await update.message.reply_photo(
            photo=context.user_data["photo"],
            caption=preview_text,
            reply_markup=reply_markup
        )
    else:
        await update.message.reply_text(preview_text, reply_markup=reply_markup)

    return CONFIRM1

async def confirmation_handler_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ ¬´–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏¬ª ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ "—Ñ—ñ–Ω–∞–ª—å–Ω–∏–π" –≤–∏–≥–ª—è–¥ (—è–∫ –≤ –∫–∞–Ω–∞–ª—ñ).
    –Ø–∫—â–æ ¬´–°–∫–∞—Å—É–≤–∞—Ç–∏¬ª ‚Äî —Ä–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ä–æ–∑–º–æ–≤—É.
    """
    query = update.callback_query
    await query.answer()

    if query.data == "confirm1":
        return await show_confirmation_2(query, context)
    else:
        # –°–∫–∞—Å—É–≤–∞–Ω–Ω—è
        if query.message.photo:
            # –Ø–∫—â–æ —Ü–µ —Ñ–æ—Ç–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ caption
            await query.edit_message_caption("–û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ, –ø–æ—á–Ω—ñ—Ç—å –∑–∞–Ω–æ–≤–æ /start.")
        else:
            await query.edit_message_text("–û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ, –ø–æ—á–Ω—ñ—Ç—å –∑–∞–Ω–æ–≤–æ /start.")
        return ConversationHandler.END

# --------------------------------------------------------------------
#               5. –î–†–£–ì–ï (–§–Ü–ù–ê–õ–¨–ù–ï) –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø (CONFIRM2)
# --------------------------------------------------------------------
async def show_confirmation_2(query, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î "—Ñ—ñ–Ω–∞–ª—å–Ω–µ –ø—Ä–µ–≤‚Äô—é" –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: —Å–∞–º–µ —Ç–∞–∫ –≤–æ–Ω–æ –≤–∏–≥–ª—è–¥–∞—Ç–∏–º–µ —É –∫–∞–Ω–∞–ª—ñ.
    """
    final_preview_text = (
        "–ù–æ–≤–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è:\n\n"
        f"{context.user_data['ad_text']}"
    )
    keyboard = [
        [InlineKeyboardButton("‚úÖ –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏", callback_data="publish")],
        [InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="cancel")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø—Ä–µ–≤‚Äô—é (—â–æ–± –Ω–µ –ø–ª—É—Ç–∞—Ç–∏—Å—è –∑ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è–º)
    if context.user_data["photo"]:
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ç–æ–º—É –∂ —á–∞—Ç—ñ
        await query.message.reply_photo(
            photo=context.user_data["photo"],
            caption=final_preview_text,
            reply_markup=reply_markup
        )
    else:
        await query.message.reply_text(final_preview_text, reply_markup=reply_markup)
    return CONFIRM2

async def confirmation_handler_2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –§—ñ–Ω–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è: —è–∫—â–æ ¬´publish¬ª ‚Äî –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∞–¥–º—ñ–Ω—É,
    —è–∫—â–æ ¬´cancel¬ª ‚Äî —Å–∫–∞—Å–æ–≤—É—î–º–æ.
    """
    query = update.callback_query
    await query.answer()

    if query.data == "publish":
        global announcement_count
        announcement_count += 1

        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
        admin_message = (
            "–ù–æ–≤–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è:\n\n"
            f"{context.user_data['ad_text']}\n\n"
            f"–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: tg://user?id={query.from_user.id}"
        )
        try:
            if context.user_data["photo"]:
                await context.bot.send_photo(
                    chat_id=ADMIN_ID,
                    photo=context.user_data["photo"],
                    caption=admin_message
                )
            else:
                await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É: {e}")

        # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        thanks_text = (
            "–î—è–∫—É—î–º–æ! –í–∞—à–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è.\n"
            "–û—á—ñ–∫—É–π—Ç–µ ‚Äî –º–∏ –∑ –≤–∞–º–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—è."
        )
        # –Ø–∫—â–æ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ
        if query.message.photo:
            await query.edit_message_caption(thanks_text)
        else:
            await query.edit_message_text(thanks_text)

    else:
        # –°–∫–∞—Å—É–≤–∞–Ω–Ω—è
        if query.message.photo:
            await query.edit_message_caption("–û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ, –ø–æ—á–Ω—ñ—Ç—å –∑–∞–Ω–æ–≤–æ /start.")
        else:
            await query.edit_message_text("–û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ, –ø–æ—á–Ω—ñ—Ç—å –∑–∞–Ω–æ–≤–æ /start.")

    return ConversationHandler.END

# --------------------------------------------------------------------
#                       6. –§–ê–õ–õ–ë–ï–ö / CANCEL
# --------------------------------------------------------------------
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–≤—ñ–≤ /cancel —É –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç ‚Äî –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ä–æ–∑–º–æ–≤—É.
    """
    await update.message.reply_text("–û–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# --------------------------------------------------------------------
#                    7. –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–ò–í–ù–Ü –ö–û–ú–ê–ù–î–ò
# --------------------------------------------------------------------
async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /broadcast (–ª–∏—à–µ –¥–ª—è ADMIN_ID).
    """
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    if context.args:
        message_to_broadcast = " ".join(context.args)
        # –í–∫–∞–∂—ñ—Ç—å, –∫—É–¥–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É (–∫–∞–Ω–∞–ª/–≥—Ä—É–ø–∞)
        CHANNEL_ID = -1001234567890
        try:
            await context.bot.send_message(chat_id=CHANNEL_ID, text=message_to_broadcast)
            await update.message.reply_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–æ –∫–∞–Ω–∞–ª—É.")
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Å–∏–ª–∫–∏: {e}")
            await update.message.reply_text("üö´ –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
    else:
        await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /broadcast.")

async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /stats –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –æ–≥–æ–ª–æ—à–µ–Ω—å (–ª–∏—à–µ –¥–ª—è ADMIN_ID).
    """
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await update.message.reply_text(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–≥–æ–ª–æ—à–µ–Ω—å: {announcement_count}")

# --------------------------------------------------------------------
#                       8. MAIN (WEBHOOK / POLLING)
# --------------------------------------------------------------------
async def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ —Å—Ç–≤–æ—Ä—é—î Application, 
    —Ä–µ—î—Å—Ç—Ä—É—î —Ö–µ–Ω–¥–ª–µ—Ä–∏ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î –±–æ—Ç–∞ (webhook/polling).
    """
    application = Application.builder().token(BOT_TOKEN).build()

    # –ü–æ–±—É–¥–æ–≤–∞ —Ä–æ–∑–º–æ–≤–∏
    conv_handler = ConversationHandler(
        entry_points=[
            # –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ ¬´–†–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è¬ª + /start
            CallbackQueryHandler(post_ad_callback, pattern="^post_ad$"),
            CommandHandler("start", start),
        ],
        states={
            COLLECT: [
                MessageHandler(filters.TEXT | filters.PHOTO, collect_data),
                # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å /done (–∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É)
                # ‚Äî —Å–∞–º –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ö–µ–Ω–¥–ª–µ—Ä –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω, –±–æ –º–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ /done –≤ collect_data
            ],
            CONFIRM1: [
                CallbackQueryHandler(confirmation_handler_1, pattern="^(confirm1|cancel)$"),
            ],
            CONFIRM2: [
                CallbackQueryHandler(confirmation_handler_2, pattern="^(publish|cancel)$"),
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
        per_user=True,
        per_chat=True,
        per_message=True,  # –©–æ–± CallbackQueryHandler –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞–≤—Å—è —É –∫–æ–∂–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
    )

    # –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ä–æ–∑–º–æ–≤—É —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
    application.add_handler(conv_handler)
    application.add_handler(CommandHandler("broadcast", broadcast))
    application.add_handler(CommandHandler("stats", stats))

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–±–æ Webhook (Heroku) –∞–±–æ Polling (–ª–æ–∫–∞–ª—å–Ω–æ)
    port = int(os.environ.get("PORT", "8443"))
    HEROKU_APP_NAME = os.environ.get("HEROKU_APP_NAME")
    if HEROKU_APP_NAME:
        webhook_url = f"https://{HEROKU_APP_NAME}.herokuapp.com/{BOT_TOKEN}"
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ webhook
        await application.run_webhook(
            listen="0.0.0.0",
            port=port,
            url_path=BOT_TOKEN,
            webhook_url=webhook_url,
        )
    else:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∑–≤–∏—á–∞–π–Ω–∏–π long-polling
        await application.run_polling()

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É
if __name__ == "__main__":
    asyncio.run(main())
